# Common container with a ROS Noetic installation.
FROM ros:noetic-ros-core as common

# Fix timezones.
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install ROS dependencies.
RUN apt-get update && apt-get install -y \
    ros-noetic-image-transport ros-noetic-dynamic-reconfigure ros-noetic-vision-opencv \
    ros-noetic-nodelet

# Add ros user.
ARG ROS_UID
RUN useradd -m -u $ROS_UID ros

# Container for building the code.
FROM common as builder

# Set up SSH for CLion.
RUN apt-get update && apt-get install -y ssh rsync && rm -rf /var/lib/apt/lists/*
RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd

RUN yes password | passwd ros

# Copy the wrapper script for cmake.
ADD scripts/catkin_cmake.sh /usr/bin/catkin_cmake

# Install libcamera.
RUN apt-get update && apt-get install -y git ninja-build libyaml-dev python3-yaml python3-ply \
    python3-jinja2 libgnutls28-dev openssl libdw-dev libudev-dev python3-pip gcc-8 g++-8 && \
    rm -rf /var/lib/apt/lists/*
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 50
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 50
RUN pip3 install meson
RUN git clone https://github.com/raspberrypi/libcamera.git
RUN cd libcamera \
    && git checkout bde9b04f \
    && meson build --buildtype=release -Dpipelines=rpi/vc4 -Dipas=rpi/vc4 \
    -Dv4l2=true -Dgstreamer=disabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled \
    -Ddocumentation=disabled && \
    ninja -C build install

# Install runtime dependencies.
RUN apt-get update && apt-get install -y libjpeg-dev libtiff-dev libpng-dev libexif-dev libv4l-dev \
    && rm -rf /var/lib/apt/lists/*

# Install ffmpeg.
RUN apt-get update && apt-get install -y ffmpeg && rm -rf /var/lib/apt/lists/*

# Install python dependencies.
ADD scripts/requirements.txt requirements.txt
RUN pip install -r requirements.txt

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]

# Container for video extraction.
FROM builder as video_extractor

# Build the code.
USER ros

WORKDIR /home/ros/ros_libcamera/
ADD src/ src/
RUN bash -c "source /opt/ros/noetic/setup.bash && catkin_make"

# Add scripts to run.
ADD scripts/extract_videos.py extract_videos.py
